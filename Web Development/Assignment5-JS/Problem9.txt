Q.9 Explain fetch.
Ans:
fetch is a built-in JavaScript function used to make asynchronous network requests to retrieve resources from a specified URL. It is a modern alternative to the older XMLHttpRequest (XHR) method for making HTTP requests.

The basic syntax of fetch is as follows:

javascript
fetch(url)
  .then(response => {
    // Handle the response
  })
  .catch(error => {
    // Handle any errors
  });


Here's a breakdown of the fetch process:

1. The fetch function takes a URL as its argument and initiates a network request to that URL.
2. It returns a Promise that resolves to the response of the request.
3. The response can be processed by chaining a .then method, which receives the response object as an argument. Inside the .then block, you can handle the response data, such as parsing it as JSON, extracting headers, or checking the status code.
4. If an error occurs during the request, the Promise is rejected, and the error can be caught and handled using the .catch method.

Here's an example of using fetch to retrieve JSON data from a server:

javascript
fetch('https://api.example.com/data')
  .then(response => response.json())
  .then(data => {
    // Process the retrieved JSON data
    console.log(data);
  })
  .catch(error => {
    console.error('Error occurred:', error);
  });


In this example, the fetch function is used to request data from the specified URL. The first .then block parses the response as JSON using the json() method. Then, in the second .then block, the parsed JSON data is available for further processing.

fetch provides a flexible and powerful way to interact with APIs and retrieve data from servers asynchronously. It supports various options and configurations for making different types of requests (GET, POST, etc.) and setting request headers.